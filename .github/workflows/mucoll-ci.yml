name: MuColl Image Build

on:
  push:
    branches:
    - main
    - dbg-ci
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-mucoll-image:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: endersonmenezes/free-disk-space@v2
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: true
          remove_swap: true
          remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
          remove_packages_one_command: true
          remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
          testing: false
      - uses: actions/checkout@v5
        with:
          path: MLTracking
      - name: Launch Container
        run: |
          docker run -it --name ci_container --privileged -v ${GITHUB_WORKSPACE}:/packages -d ghcr.io/muoncollidersoft/mucoll-ml-ubuntu24:full_gaudi_test
      - name: Get Setup Script
        run: |
          SETUP_SCRIPT=$(docker exec ci_container /bin/bash -c "grep setup_mucoll_ml /etc/profile.d/aliases.sh | awk -F '=' '{print \$2}' | sed 's/\"//g'")
          echo "SETUP_SCRIPT=$SETUP_SCRIPT" >> $GITHUB_ENV
      - name: Build dependencies
        run: |
          echo "set -ex" > ${GITHUB_WORKSPACE}/dependency_build.sh
          echo $SETUP_SCRIPT > ${GITHUB_WORKSPACE}/dependency_build.sh
          cat << 'EOF' >> ${GITHUB_WORKSPACE}/dependency_build.sh
          cd /packages
          . MLTracking/build_dependencies.sh
          EOF
          chmod +x ${GITHUB_WORKSPACE}/dependency_build.sh

          docker exec ci_container /bin/bash -c "/packages/dependency_build.sh"
      - name: Build
        run: |
          echo "set -ex" > ${GITHUB_WORKSPACE}/build.sh
          echo $SETUP_SCRIPT >> ${GITHUB_WORKSPACE}/build.sh
          cat << 'EOF' >> ${GITHUB_WORKSPACE}/build.sh
          cd /packages
          . MLTracking/setup_dependencies.sh
          cd MLTracking
          cmake -B build -S . \
            -GNinja \
            -DCMAKE_INSTALL_PREFIX=$(pwd)/install \
            -DCMAKE_CXX_STANDARD=20
          cmake --build build

          EOF
          chmod +x ${GITHUB_WORKSPACE}/build.sh

          docker exec ci_container /bin/bash -c "/packages/build.sh"
